---
- name: purge contego-extension package
  apt:
      name: tvault-contego
      state: absent
      purge: yes

- name: ensure tvault-contego service is stopped
  service: name=tvault-contego state=stopped enabled=yes
  ignore_errors: yes

- name: ensure tvault-object-store service is stopped 
  service: name=tvault-object-store  state=stopped enabled=yes
  ignore_errors: yes

#- name: ensure virtenv dir(/home/tvault) is deleted
#  file: path={{TVAULT_CONTEGO_VIRTENV}} state=absent

- name: ensure logrotate file is removed
  file: path=/etc/logrotate.d/tvault-contego state=absent

- name: ensure tvault contego conf file is deleted
  file: path={{TVAULT_CONTEGO_CONF}} state=absent

- name: ensure tvault contego log file  is deleted
  file: path=/var/log/nova/tvault-contego.log state=absent

#- block:
#    - name: ensure tvault-contego service file is deleted if os release is rhel7
#      file: path=/etc/systemd/system/tvault-contego.service state=absent
#
#    - name: reload daemon  
#      shell: systemctl daemon-reload
#    
#    - name: ensure tvault-object-store service file is deleted if os release is rhel7
#      file: path=/etc/systemd/system/tvault-object-store.service state=absent
#
#    - name: ensure tvault-swift service file is deleted if os release is rhel7
#      file: path=/etc/systemd/system/tvault-swift.service state=absent 
#
#    - name: reload daemon
#      shell: systemctl daemon-reload
#  when: >
#        (ansible_distribution_major_version=="7" and ansible_distribution== centos) or
#        (ansible_distribution_major_version=="7" and ansible_distribution=="RedHat") 
#      
#        
#- block:
#    - block:
#        - name: ensure tvault-contego service file is deleted if os release is Ubuntu
#          file: path=/etc/systemd/system/tvault-contego.service state=absent
#
#        - name: reload daemon
#          shell: systemctl daemon-reload
#
#        - name:  ensure tvault-object-store service file is deleted if os release is Ubuntu
#          file: path=/etc/systemd/system/tvault-object-store.service state=absent
#
#        - name: ensure tvault-swift service file is deleted if os release is rhel7
#          file: path=/etc/systemd/system/tvault-swift.service state=absent
#    
#        - name: reload daemon
#          shell: systemctl daemon-reload
#      when: ansible_lsb.codename == 'xenial' or ansible_lsb.codename == 'willy' 
#
#    - block:
#        - name: ensure tvault-contego service file is deleted if os release is Ubuntu
#          file: path=/etc/init/tvault-contego.conf state=absent
#
#        #- name: reload daemon
#        #  shell: systemctl daemon-reload
#
#        - name:  ensure tvault-object-store service file is deleted if os release is Ubuntu
#          file: path=/etc/init/tvault-object-store.conf state=absent
#
#        - name: ensure tvault-swift service file is deleted if os release is rhel7
#          file: path=/etc/init/tvault-swift.conf state=absent
#
#        #- name: reload daemon
#        #  shell: systemctl daemon-reload
#      when: ansible_lsb.codename != 'xenial' or ansible_lsb.codename != 'willy'
#  when: ansible_distribution=="Ubuntu"
#
#- block:
#    - name: ensure tvault-contego service file is deleted if os release is Suse
#      file: path=/etc/systemd/system/tvault-contego.service state=absent
#
#    - name: reload daemon
#      shell: systemctl daemon-reload
#
#    - name:  ensure tvault-object-store service file is deleted if os release is Suse
#      file: path=/etc/systemd/system/tvault-object-store.service state=absent
#
#    - name: ensure tvault-swift service file is deleted if os release is rhel7
#      file: path=/etc/systemd/system/tvault-swift.service state=absent
#
#    - name: reload daemon
#      shell: systemctl daemon-reload
#  when: ansible_distribution=="Suse" 

- name: grep mountpath
  shell: df -h | grep '{{TVAULT_DATA_DIR}}' | awk -F' ' '{print $6}'
  register: mount_path

- debug: msg="{{mount_path.stdout}}"  verbosity={{verbosity_level}}

- set_fact:
    mount_list : "{{ mount_path.stdout.split('\n') }}"

- debug : msg="mount list is:{{mount_list}}"

- name:  unmount mountpath incase contego is failed to unmount
  shell: umount {{item}}
  with_items: "{{mount_list}}"
  when: mount_path.stdout != ""

